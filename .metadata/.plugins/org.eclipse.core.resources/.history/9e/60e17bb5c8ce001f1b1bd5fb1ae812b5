import java.util.LinkedList;


public class Player {
	public String name;
	public int score;
	public int tournyscore; 
	public LinkedList<Moneys> money;
	private Console printer;
	
	public Player(String n,int s,Moneys[] m,Console c)
	{
		printer=c;
		name=n;
		score=s;
		tournyscore=0;
		money=new LinkedList<Moneys>();
		if(m==null)
			tournyscore=-100;
		else
			for(Moneys mon : m)
			{
				money.add(mon);
				tournyscore+=mon.amount;
			}
		
		
	}
	
	//return the linked list containing the Moneys(value and original owner) taken for tourny purposes
	//only use this function when money is going to a tourny person
	public LinkedList<Moneys> take(int am,String player)
	{
		LinkedList<Moneys> ret=new LinkedList<Moneys>();
		if(tournyscore >=0)
		{
			int amount=am;
			while(amount > 0)
			{
				if(!money.isEmpty())
				{
					Moneys take=money.getLast();
					for(Moneys m : money)
						if(m.owner.equals(player))
							take=m;
					if(take.amount > amount)
					{
						ret.add(new Moneys(take.owner,amount));
						take.amount-=amount;
						amount=0;
					}
					else
					{
						ret.add(take);
						money.remove(take);
						amount-=take.amount;
					}
				}
				else
				{
					tournyscore = -100;
					amount =0;
				}
			}
			//some stuff
			
			if(tournyscore <0)
				printer.PrintMessage(name +"was knocked out of the tourny\r\n");
			
		}
		return ret;
	}
	public void give(LinkedList<Moneys> points)
	{
		while(!points.isEmpty())
		{
			if(points.getFirst().owner.equals(name))//it is your money
			{
				if(money.getFirst().owner.equals(name))//you still have some of your own money
				{
					money.getFirst().amount+=points.getFirst().amount;
				}
				else
				{
					money.addFirst(points.getFirst());
				}
			}
			else
			{
				if(points.getFirst().owner.equals(money.getLast().owner))
				{
					money.getLast().amount+=points.getFirst().amount;
				}
				else
				{
					money.add(points.getFirst());
				}
			}
			points.removeFirst();
		}
	}
}
